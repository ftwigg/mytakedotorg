plugins { id 'net.ltgt.apt-eclipse' version '0.21' }

import com.diffplug.common.swt.os.SwtPlatform

apply plugin: 'java'

repositories {
	maven {
		url 'http://repository.jsweet.org/artifactory/libs-release-local'
		content { includeGroup 'org.jsweet' }
	}
	mavenCentral()
}

String VER_AUTOVALUE = '1.7'
dependencies {
	annotationProcessor     "com.google.auto.value:auto-value:${VER_AUTOVALUE}"
	implementation          "com.google.auto.value:auto-value-annotations:${VER_AUTOVALUE}"
	testAnnotationProcessor "com.google.auto.value:auto-value:${VER_AUTOVALUE}"
	testImplementation      "com.google.auto.value:auto-value-annotations:${VER_AUTOVALUE}"

	compileOnly 'com.google.code.findbugs:jsr305:3.0.2'
	compile project(':client')
	compile project(':lucene')
	compile "com.jsoniter:jsoniter:$JSONITER_VER"
	compile "org.jsweet:jsweet-core:$JSWEET_CORE_VER"
	compile 'org.jsoup:jsoup:1.11.3'
	compile 'org.eclipse.jgit:org.eclipse.jgit:5.0.1.201806211838-r'
	compile 'com.diffplug.durian:durian-core:1.2.0'
	compile 'com.diffplug.durian:durian-collect:1.2.0'
	compile 'com.diffplug.durian:durian-io:1.2.0'
	testCompile "junit:junit:$JUNIT_VER"
	testCompile "org.assertj:assertj-core:$ASSERTJ_VER"

	testCompile 'com.diffplug.durian:durian-swt:3.1.0'
	testCompile 'com.diffplug.durian:durian-rx:3.0.0'
	testCompile 'io.reactivex.rxjava2:rxjava:2.2.7'
}

apply plugin: 'com.diffplug.eclipse.mavencentral'
eclipseMavenCentral {
	release '4.14.0', {
		testCompile 'org.eclipse.swt'
		testCompile 'org.eclipse.jface'
		useNativesForRunningPlatform()
	}
}

eclipse {
	project {
		referencedProjects = [
			'mytake-client'
		]
	}
}

task generateFoundation(type: JavaExec) {
	description = 'Generates the foundation'
	classpath = sourceSets.main.runtimeClasspath
	main = 'org.mytake.foundation.Index'
}
generateFoundation.dependsOn(classes)
generateFoundation.inputs.dir('../presidential-debates')
generateFoundation.outputs.file('../foundation/src/main/resources/foundation-index-hash.json')

apply plugin: 'com.diffplug.gradle.spotless'
spotless {
	java {
		licenseHeaderFile(rootProject.file('gradle/spotless.license.java'))
		importOrder()
		eclipse().configFile(rootProject.file('gradle/spotless.eclipseformat.xml'))
		removeUnusedImports()
	}
	format 'foundation', {
		target 'src/main/resources/**'
		replace('Always use simple apostrophe', "’", "'")
		replace('Always use simple right quote', '”', '"')
		replace('Always use simple left quote', '“', '"')
	}
}

task transcriptGui(type: JavaExec, dependsOn: testClasses) {
	description = 'Runs the transcript GUI'
	classpath = sourceSets.test.runtimeClasspath
	main = 'org.mytake.foundation.transcript.gui.TranscriptFolderDialog'
	if (com.diffplug.common.swt.os.OS.getNative().isMac()) {
		jvmArgs = [
			'-XstartOnFirstThread'
		]
	}
}
